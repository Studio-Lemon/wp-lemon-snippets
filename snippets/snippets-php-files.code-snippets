{
	"acfBuilder Configuration": {
		"prefix": [
			"acfbuilder",
			"wp-lemon-acfbuilder"
		],
		"scope": "php, html",
		"body": [
			"<?php",
			"",
			"/**",
			" * Fields for ${1:post_type_name}",
			" *",
			" * @package WordPress",
			" * @subpackage WP_Lemon\\Child",
			" */",
			"",
			"namespace WP_Lemon\\Child\\Models;",
			"",
			"use StoutLogic\\AcfBuilder\\FieldsBuilder;",
			"",
			"add_action(",
			"   'acf/init',",
			"   function () {",
			"",
			"      \\$fields_${1:post_type_name} = new FieldsBuilder('cpt_${1:post_type_name}', [",
			"         'title' => __('Extra fields', 'wp-lemon'),",
			"      ]);",
			"",
			"      \\$fields_${1:post_type_name}",
			"",
			"         ->setLocation('post_type', '==', '${1:post_type_name}');",
			"",
			"      acf_add_local_field_group(\\$fields_${1:post_type_name}->build());",
			"   }",
			");",
			""
		],
		"description": "acfBuilder Config"
	},
	"Create a pattern for a specific post type": {
		"prefix": [
			"block-pattern-for-post-type",
			"wp-lemon-block-pattern-for-post-type"
		],
		"scope": "php, html",
		"body": [
			"<?php",
			"",
			"/**",
			" * Title: ${1:Pattern title}",
			" * Slug: ${2:Theme slug}/${3:Pattern Slug}",
			" * Categories: posts",
			" * Description: A selection of blocks for a parent solution page.",
			" * Post Types: ${4:Post Type}",
			" * Block Types: core/post-content",
			" *",
			" * @package WordPress",
			" * @subpackage WP_Lemon\\Child",
			" */",
			"",
			"?>"
		]
	},
	"create an extended Timber Post Class": {
		"prefix": [
			"timberPostObject",
			"wp-lemon-timberPostObject"
		],
		"scope": "php",
		"body": [
			"<?php",
			"",
			"/**",
			" * Setup an extended post query class.",
			" * Used for ${1:post_type_name}",
			" *",
			" * @package WordPress",
			" * @subpackage WP_Lemon\\Child",
			" */",
			"",
			"namespace WP_Lemon\\Child\\Classes;",
			"",
			"use Timber\\Post;",
			"use Timber\\Timber;",
			"",
			"class ${1:post_type_name} extends Post",
			"{",
			"   private mixed \\$_example = null;",
			"",
			"   public function get_example(): array|null",
			"   {",
			"      if (!is_null(\\$this->_example)) {",
			"         return \\$this->_example;",
			"      }",
			"",
			"      return \\$this->_example;",
			"   }",
			"}",
			""
		],
		"description": "create a extended post object"
	},
	"Create customizer file": {
		"prefix": [
			"wp-lemon-customizer-file",
			"custimzer-file"
		],
		"body": [
			"<?php",
			"",
			"/**",
			" * Customizer",
			" *",
			" * @package WordPress",
			" * @subpackage WP_Lemon\\Child",
			" */",
			"",
			"namespace WP_Lemon\\Child\\Models;",
			"",
			"/**",
			" * Register customizer fields via native api.",
			" *",
			" * @param object \\$wp_customize  The cutomizer object we are going to extend.",
			" * @return void",
			" */",
			"function customize_register(\\$wp_customize)",
			"{",
			"   \\$wp_customize->add_section(",
			"\t  '${1:project slug}',",
			"\t  [",
			"\t\t 'title'       => esc_attr_x('${2:project name}', 'Backend - Customizer section title', 'wp-lemon-child'),",
			"\t\t 'priority'    => 50,",
			"\t\t 'description' => esc_attr_x('${3:project description}', 'Backend - Customizer section description', 'wp-lemon-child'),",
			"\t  ]",
			"   );",
			"}",
			"add_action('customize_register', __NAMESPACE__ . '\\\\customize_register');"
		],
		"description": "Generates a full customizer file."
	}
}